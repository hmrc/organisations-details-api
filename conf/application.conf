# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = organisations-details-api
appUrl = CHANGEME

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.organisationsdetailsapi.handlers.VersioningRequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.organisationsdetailsapi.handlers.CustomErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.organisationsdetailsapi.config.ConfigModule"


# The application languages
# ~~~~~
play.i18n.langs = ["en"]

json.encryption.key = "fqpLDZ4smuDsekHkrEBlCA=="

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 200
}

versioning {
  unversionedContexts = [
    "/api",
    "/admin",
    "/ping"
  ]
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

mongodb.uri = "mongodb://127.0.0.1:27017/organisations-details-api"

# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }

    organisations-matching-api {
      host = localhost
      port = 9657
    }

    integration-framework {
      host = localhost
      port = 8443
      authorization-token = IF_BEARER_TOKEN
      environment = isit
    }
  }
}

api {
  access {
    version-1.0 {
      status = "BETA"
      endpointsEnabled = true
    }
  }
}

api-config {
    scopes {
        "read:organisations-details-ho-suv" {
            fields = [
                "E", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T"

            ]
        }
        "read:organisations-details-ho-ssp" {
            fields = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M"]
        }
    }
    endpoints {
        internal {
        corporation-tax {
            title = "Get the organisation's Corporation Tax details"
            endpoint = "/organisations/details/corporation-tax?matchId=<matchId>"
            fields = ["A","B","C","D","E"]
        }

        self-assessment {
            title = "Get the organisation's Self Assessment details"
            endpoint = "/organisations/details/self-assessment?matchId=<matchId>"
            fields = ["F","G","H","I"]
        }

        number-of-employees {
            title = "Get the organisation's Number Of Employees details"
            endpoint = "/organisations/details/number-of-employees?matchId=<matchId>"
            fields = ["J","K","L","M"]
        }

        vat {
            title = "Get the organisation's VAT return details"
            endpoint = "/organisations/details/vat?matchId=<matchId>"
            fields = ["N","O","P","Q","R","S","T"]
        }
      }
    }

    fields {
        #corporation-tax
        A = "taxpayerStartDate",
        B = "accountingPeriods/apStartDate",
        C = "accountingPeriods/apEndDate",
        D = "accountingPeriods/turnover",
        E = "taxSolvencyStatus"

        # self assessment
        F = "startDate",
        G = "taxyears/businessSalesTurnover",
        H = "taxyears/taxyear",
        I = "taxSolvencyStatus"

        # number of employees
        J = "references/counts/employeeCount",
        K = "references/payeReference",
        L = "references/districtNumber",
        M = "references/counts/dateTaken"

        # vat todo
        N = "appDate"
        O = "taxYears/taxYear"
        P = "taxYears/vatReturns/calendarMonth"
        Q = "taxYears/vatReturns/liabilityMonth"
        R = "taxYears/vatReturns/numMonthsAssessed"
        S = "taxYears/vatReturns/box6Total"
        T = "taxYears/vatReturns/returnType"
    }
}


